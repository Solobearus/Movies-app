{"version":3,"sources":["Components/App/App.module.css","Components/Container/Container.module.css","Components/Container/Table/Item/Item.module.css","Redux/actions.js","Redux/reducers.js","Redux/store.js","Components/Modal/DeleteModel/DeleteModel.jsx","Components/Modal/EditModel/EditModel.jsx","Components/Modal/AddModal/AddModal.jsx","Components/Modal/Modal.jsx","Components/Container/Table/Item/Item.jsx","Components/Container/Table/Table.jsx","Containers/TableMovies.js","Components/Container/Container.jsx","Components/App/App.js","serviceWorker.js","index.js","Components/Container/Table/Table.module.css"],"names":["module","exports","App","App_logo","App-logo-spin","App_header","App_link","Container","Item","ADD_MOVIE","UPDATE_MOVIE","DELETE_MOVIE","INIT_MOVIES","fetchMovies","dispatch","fetch","concat","then","res","json","results","promises","Search","map","result","push","imdbID","Promise","all","jsonPromises","movies","type","payload","error","alert","initialState","isLoaded","items","open","moviesReducer","state","arguments","length","undefined","action","index","newitems","Object","toConsumableArray","objectSpread","item","indexOf","splice","createStore","combineReducers","form","formReducer","applyMiddleware","logger","reduxPromise","thunk","DeleteModel","props","react_default","a","createElement","Fragment","DialogTitle_default","id","movie","Title","DialogActions_default","Button_default","onClick","handleClose","color","click","EditModel","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","titles","store","getState","Year","Runtime","Genre","Director","handleChange","bind","assertThisInitialized","handleSubmit","event","name","target","setState","defineProperty","value","includes","preventDefault","_this2","onSubmit","DialogContent_default","style","TextField_default","disabled","fullWidth","label","defaultValue","margin","variant","inputProps","maxLength","onChange","React","Component","AddModal","console","log","Modal","handleClickOpen","model","Modal_DeleteModel_DeleteModel","Modal_EditModel_EditModel","Modal_AddModal_AddModal","Dialog_default","aria-labelledby","modals","header","Modal_Modal","updateMovie","deleteMovie","className","toLowerCase","match","join","split","s","charAt","toUpperCase","substring","Table","initMovies","scroll","Table_Item_Item","key","addMovie","connect","TableMovies","href","Components_Container_Container","Boolean","window","location","hostname","theme","createMuiTheme","palette","primary","main","typography","useNextVariants","render","es","ReduxStore","styles","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44cff250.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__8BQt3\",\"App_logo\":\"App_App_logo__FA8ex\",\"App-logo-spin\":\"App_App-logo-spin__12IdZ\",\"App_header\":\"App_App_header__1fCLs\",\"App_link\":\"App_App_link__4DPhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2nkrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__2XqEX\"};","\r\n/*\r\n * action types\r\n */\r\n\r\nexport const ADD_MOVIE = 'ADD_MOVIE'\r\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\r\nexport const DELETE_MOVIE = 'DELETE_MOVIE'\r\nexport const INIT_MOVIES = 'SET_MOVIES'\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function addMovie(payload) {\r\n    return { type: ADD_MOVIE, payload }\r\n};\r\n\r\nexport function updateMovie(payload) {\r\n    return { type: UPDATE_MOVIE, payload }\r\n};\r\n\r\nexport function deleteMovie(payload) {\r\n    return { type: DELETE_MOVIE, payload }\r\n};\r\n\r\nexport function initMovies() {\r\n    return dispatch => {\r\n        fetchMovies(dispatch)\r\n    }\r\n};\r\n\r\nconst fetchMovies = (dispatch) => {\r\n    let key = '887c425e';\r\n    let search = 'war';\r\n    let page = 1;\r\n\r\n    fetch(`https://www.omdbapi.com/?apikey=${key}&s=${search}&page=${page}`)\r\n    .then(res => res.json())\r\n    .then((results) => {\r\n        let promises = [];\r\n\r\n        //Unfortunatly I could not find any API that could fetch all requested data in one API call.\r\n        //So my solution was to run a API call for every movie the fetch got me and get all data for every movie in the list.\r\n        results.Search.map((result) => promises.push(fetch(`https://www.omdbapi.com/?i=${result.imdbID}&apikey=${key}`)));\r\n\r\n        Promise.all(promises)\r\n        .then((results) => {\r\n            let jsonPromises = results.map(result => result.json());\r\n\r\n            Promise.all(jsonPromises)\r\n            .then((movies)=>{\r\n                dispatch({\r\n                    type: INIT_MOVIES,\r\n                    payload: movies\r\n                });\r\n            }) \r\n        })\r\n    },\r\n    // Note: it's important to handle errors here\r\n    // instead of a catch() block so that we don't swallow\r\n    // exceptions from actual bugs in components.\r\n    (error) => {\r\n        alert(error);\r\n    })\r\n};","\r\nimport {\r\n    ADD_MOVIE,\r\n    UPDATE_MOVIE,\r\n    DELETE_MOVIE,\r\n    INIT_MOVIES,\r\n} from './actions'\r\n\r\nconst initialState = {\r\n    isLoaded:false,\r\n    items:[],\r\n    open:false\r\n};\r\n\r\nfunction moviesReducer(state = initialState, action) {\r\n\r\n    let index = 0;\r\n    let newitems = [];\r\n    switch (action.type) {\r\n        case ADD_MOVIE:\r\n            newitems = [...state.items];\r\n            newitems.push(action.payload);\r\n            return {...state, items : newitems};\r\n\r\n        case UPDATE_MOVIE:\r\n            newitems = [...state.items];\r\n            index = newitems.map(item => item.imdbID).indexOf(action.payload.imdbID);\r\n            newitems[index] = action.payload;\r\n            return {...state, items : newitems};\r\n\r\n        case DELETE_MOVIE:\r\n            newitems = [...state.items];\r\n            index = newitems.map(item => item.imdbID).indexOf(action.payload);\r\n            newitems.splice(index, 1);\r\n            return {...state, items : newitems};\r\n\r\n        case INIT_MOVIES:\r\n            return {...state, items : action.payload};\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// function modalReducer(state = true, action) {\r\n\r\n//     switch (action.type) {\r\n        \r\n//         case OPEN_MODAL:\r\n//             return Object.assign({},state,{open : true});\r\n//         case CLOSE_MODAL:\r\n//             return Object.assign({},state,{open : false});\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n\r\nexport default moviesReducer","import { createStore , combineReducers , applyMiddleware } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nimport moviesReducer from './reducers'\r\nimport reduxPromise from 'redux-promise-middleware'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nexport default createStore(\r\n    combineReducers({\r\n        form: formReducer,\r\n        moviesReducer\r\n    }),\r\n    {},\r\n    applyMiddleware( logger,reduxPromise,thunk )\r\n)","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nconst DeleteModel = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <DialogTitle id=\"form-dialog-title\">Delete {props.movie.Title}?</DialogTitle>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={() => {props.handleClose()}} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={() => { props.click(props.movie.imdbID); props.handleClose(); }} color=\"primary\">\r\n                    Delete\r\n                </Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DeleteModel\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport store from '../../../Redux/store'\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nclass EditModel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            titles: store.getState().moviesReducer.items.map((item) => item.Title),\r\n            error: '',\r\n            imdbID: this.props.movie.imdbID,\r\n            Title: this.props.movie.Title,\r\n            Year: this.props.movie.Year,\r\n            Runtime: this.props.movie.Runtime,\r\n            Genre: this.props.movie.Genre,\r\n            Director: this.props.movie.Director\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        if(!this.state.Title ) {\r\n            this.setState({\r\n                error: \"Error : Title is not set\"\r\n            });\r\n        } else if(this.state.Year < 1900 || this.state.Year > 2019){\r\n            this.setState({\r\n                error: \"Error : Year must be between 1900 and 2019\"\r\n            });\r\n        } else if(!this.state.Runtime ) {\r\n            this.setState({\r\n                error: \"Error : Runtime is not set\"\r\n            });\r\n        } else if(!this.state.Genre ) {\r\n            this.setState({\r\n                error: \"Error : Genre is not set\"\r\n            });\r\n        } else if(!this.state.Director ) {\r\n            this.setState({\r\n                error: \"Error : Director is not set\"\r\n            });\r\n        } else if(this.state.titles.includes(this.state.Title)) {\r\n            this.setState({\r\n                error: `Error : ${this.state.Title} already exists.`\r\n            });\r\n        } else {\r\n            this.props.click(this.state);\r\n            this.props.handleClose();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <DialogTitle id=\"form-dialog-title\"> Editing {this.props.movie.Title}</DialogTitle>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <DialogContent>\r\n                        <p style={{color: 'red'}}>{this.state.error}</p>\r\n                        <TextField\r\n                            disabled\r\n                            fullWidth\r\n                            name=\"imdbID\"\r\n                            id=\"outlined-required\"\r\n                            label=\"imdbID\"\r\n                            defaultValue={this.props.movie.imdbID}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Title\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Title\"\r\n                            defaultValue={this.props.movie.Title}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"Year\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Year\"\r\n                            defaultValue={this.props.movie.Year}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Runtime\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Runtime\"\r\n                            defaultValue={this.props.movie.Runtime}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Genre\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Genre\"\r\n                            defaultValue={this.props.movie.Genre}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Director\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Director\"\r\n                            defaultValue={this.props.movie.Director}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => { this.props.handleClose() }} color=\"primary\">\r\n                            Cancel\r\n                    </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Update\r\n                    </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default EditModel\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport store from '../../../Redux/store'\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            titles: store.getState().moviesReducer.items.map((item) => item.Title),\r\n            error: '',\r\n            imdbID: '',\r\n            Title: '',\r\n            Year: 0,\r\n            Runtime: '',\r\n            Genre: '',\r\n            Director: '',\r\n        };\r\n\r\n        console.log(this.state.titles);\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        if(!this.state.imdbID ) {\r\n            this.setState({\r\n                error: \"Error : imdbID is not set\"\r\n            });\r\n        } else if(this.state.imdbID.length !== 9 ) {\r\n            this.setState({\r\n                error: \"Error : imdbID must be 9 characters long\"\r\n            });\r\n        } else if(!this.state.Title ) {\r\n            this.setState({\r\n                error: \"Error : Title is not set\"\r\n            });\r\n        } else if(this.state.Year < 1900 || this.state.Year > 2019){\r\n            this.setState({\r\n                error: \"Error : Year must be between 1900 and 2019\"\r\n            });\r\n        } else if(!this.state.Runtime ) {\r\n            this.setState({\r\n                error: \"Error : Runtime is not set\"\r\n            });\r\n        } else if(!this.state.Genre ) {\r\n            this.setState({\r\n                error: \"Error : Genre is not set\"\r\n            });\r\n        } else if(!this.state.Director ) {\r\n            this.setState({\r\n                error: \"Error : Director is not set\"\r\n            });\r\n        } else if(this.state.titles.includes(this.state.Title)) {\r\n            this.setState({\r\n                error: `Error : ${this.state.Title} already exists.`\r\n            });\r\n        } else {\r\n            this.props.click(this.state);\r\n            this.props.handleClose();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <DialogTitle id=\"form-dialog-title\"> Adding a new movie</DialogTitle>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <DialogContent>\r\n                        <p style={{color: 'red'}}>{this.state.error}</p>\r\n                        <TextField\r\n                            fullWidth\r\n                            name=\"imdbID\"\r\n                            id=\"outlined-required\"\r\n                            label=\"imdbID\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Title\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Title\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"Year\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Year\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Runtime\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Runtime\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Genre\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Genre\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Director\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Director\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => { this.props.handleClose() }} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Create\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddModal\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport DeleteModel from './DeleteModel/DeleteModel.jsx';\r\nimport EditModel from './EditModel/EditModel.jsx';\r\nimport AddModal from './AddModal/AddModal.jsx';\r\n\r\nexport default class Modal extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.model = null;\r\n    }\r\n\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.value === \"Delete\") {\r\n            this.model = <DeleteModel\r\n                click={this.props.click}\r\n                movie={this.props.movie}\r\n                handleClose={this.handleClose}\r\n            />\r\n        } else if (this.props.value === \"Edit\") {\r\n            this.model = <EditModel\r\n                click={this.props.click}\r\n                movie={this.props.movie}\r\n                handleClose={this.handleClose}\r\n            />\r\n        } else if (this.props.value === \"Add\") {\r\n            this.model = <AddModal\r\n                click={this.props.click}\r\n                handleClose={this.handleClose}\r\n            />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    {this.props.value}\r\n                </Button>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    {this.model}\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport style from './Item.module.css'\r\nimport Modal from '../../../Modal/Modal.jsx'\r\n\r\nconst Item = (props) => {\r\n\r\n    let modals = null;\r\n    if (!props.header) {\r\n        modals = <React.Fragment>\r\n            <Modal movie={props.movie} click={props.updateMovie} value='Edit'></Modal>\r\n            <Modal movie={props.movie} click={props.deleteMovie} value='Delete'></Modal>\r\n        </React.Fragment>\r\n    }\r\n\r\n    return (\r\n        <div className={style.Item}>\r\n            <p>{props.movie.imdbID}</p>\r\n            <p>{(props.movie.Title).toLowerCase()           //lowercase everything to remove unwanted uppercase letters in middle of words\r\n                                    .match(/([a-z\\s])+/g)   //clear the unwanted characters\r\n                                    .join('')               //now we need to join to get words seperated by space\r\n                                    .split(' ')             //split words on space\r\n                                    .map((s) => s.charAt(0).toUpperCase() + s.substring(1)) //make sure every word is now uppercased in the first letter\r\n                                    .join(' ')              //now we join all words to have full name\r\n                                    }</p>         \r\n            <p>{props.movie.Year}</p>\r\n            <p>{props.movie.Runtime}</p>\r\n            <p>{props.movie.Genre}</p>\r\n            <p>{props.movie.Director}</p>\r\n\r\n            {modals}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React, { Component } from 'react';\r\nimport style from './Table.module.css'\r\nimport Item from './Item/Item.jsx'\r\nimport Modal from '../../Modal/Modal.jsx'\r\n\r\nclass Table extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initMovies();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            < div className={style.Table} id={style.scroll}>\r\n\r\n                <Item \r\n                    movie={{\r\n                        imdbID: \"imdbID\",\r\n                        Title : \"Title\",\r\n                        Year : \"Year\", \r\n                        Runtime : \"Runtime\", \r\n                        Genre : \"Genre\", \r\n                        Director : \"Director\"\r\n                    }} \r\n                    header= {true}>\r\n                </Item>\r\n\r\n                {(this.props.movies || []).map(\r\n                    (movie) => {\r\n                        return <Item\r\n                            movie={movie}\r\n                            key= {movie.imdbID}\r\n                            updateMovie= {this.props.updateMovie}\r\n                            deleteMovie= {this.props.deleteMovie}>\r\n                        </Item>\r\n                    }\r\n                )}\r\n                <Modal click={this.props.addMovie} value='Add'></Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table\r\n","import { connect } from 'react-redux'\r\nimport { addMovie, updateMovie, deleteMovie, initMovies } from '../Redux/actions'\r\nimport Table from '../Components/Container/Table/Table.jsx'\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.moviesReducer.items\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMovie: (payload) => dispatch(addMovie(payload)),\r\n    updateMovie: (payload) => dispatch(updateMovie(payload)),\r\n    deleteMovie: (payload) => dispatch(deleteMovie(payload)),\r\n    initMovies: () => dispatch(initMovies())\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Table);","import React from 'react'\r\nimport style from './Container.module.css'\r\nimport TableMovies from '../../Containers/TableMovies'\r\n\r\nconst Container = (props) => {\r\n\r\n    const title = \"Movies\";\r\n    return (\r\n        <div className={style.Container}>\r\n            <h1>★ ★ ★ {title} ★ ★ ★</h1>\r\n            <TableMovies />\r\n            <p>Application made by <a href=\"https://github.com/Solobearus\">Ivan Solobear</a> | Photo by Tyler Callahan on Unsplash</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React, { Component } from 'react';\n// import logo from '../Images/logo.svg';\nimport style from './App.module.css';\nimport Container from '../Container/Container.jsx';\n// import TableMovies from '../../Containers/TableMovies.jsx'\n// import VisibleTodoList from '../../Containers/VisibleTodoList/VisibleTodoList.jsx'\n\n// import { SET_MOVIES } from '../../Redux/actions'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className={style.App}>\n        <Container />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux'\nimport ReduxStore from './Redux/store'\nimport './index.css';\nimport App from './Components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider,createMuiTheme } from '@material-ui/core/styles';\n\n\n// const store = createStore(rootReducer);\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: '#613C24',\n      },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nrender(\n  <Provider store={ReduxStore}>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n//FIXME: if something breaks comment this back in\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__QTi4Y\"};"],"sourceRoot":""}