{"version":3,"sources":["Components/App/App.module.css","Components/Container/Container.module.css","Components/Container/Table/Table.module.css","Components/Container/Table/Item/Item.module.css","Components/Modal/EditModel/EditModel.module.css","Components/Modal/AddModal/AddModal.module.css","Redux/actions.js","Redux/reducers.js","Redux/store.js","Components/Container/Table/TableHeader/TableHeader.jsx","Components/Modal/DeleteModel/DeleteModel.jsx","Components/Modal/EditModel/EditModel.jsx","Components/Modal/AddModal/AddModal.jsx","Components/Modal/Modal.jsx","Components/Container/Table/Item/Item.jsx","Components/Container/Table/Table.jsx","Containers/TableMovies.js","Components/Container/Container.jsx","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","App","App_logo","App-logo-spin","App_header","App_link","Container","Table","Item","AddEditModel","AddModal","ADD_MOVIE","UPDATE_MOVIE","DELETE_MOVIE","INIT_MOVIES","fetchMovies","dispatch","fetch","concat","then","res","json","results","promises","Search","map","result","push","imdbID","Promise","all","values","movies","console","log","readerPromises","value","reader","body","getReader","read","processText","_ref","done","stringValue","TextDecoder","decode","parsedText","JSON","parse","type","payload","error","alert","initialState","isLoaded","items","open","moviesReducer","state","arguments","length","undefined","action","index","newitems","Object","toConsumableArray","objectSpread","item","indexOf","splice","createStore","combineReducers","form","formReducer","applyMiddleware","logger","reduxPromise","thunk","TableHeader","props","react_default","a","createElement","className","style","DeleteModel","Fragment","DialogTitle_default","id","movie","Title","DialogActions_default","Button_default","onClick","handleClose","color","click","EditModel","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","titles","store","getState","Year","Runtime","Genre","Director","handleChange","bind","assertThisInitialized","handleSubmit","event","name","target","setState","defineProperty","includes","preventDefault","_this2","onSubmit","DialogContent_default","TextField_default","disabled","fullWidth","label","defaultValue","margin","variant","inputProps","maxLength","onChange","React","Component","Modal","handleClickOpen","model","Modal_DeleteModel_DeleteModel","Modal_EditModel_EditModel","Modal_AddModal_AddModal","Dialog_default","aria-labelledby","modals","header","Modal_Modal","updateMovie","deleteMovie","toLowerCase","match","join","initMovies","Table_TableHeader_TableHeader","Table_Item_Item","addMovie","connect","TableMovies","Components_Container_Container","Boolean","window","location","hostname","theme","createMuiTheme","palette","primary","main","render","es","ReduxStore","styles","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8a1e8ff7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__8BQt3\",\"App_logo\":\"App_App_logo__FA8ex\",\"App-logo-spin\":\"App_App-logo-spin__12IdZ\",\"App_header\":\"App_App_header__1fCLs\",\"App_link\":\"App_App_link__4DPhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2nkrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__QTi4Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Item_Item__2XqEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddEditModel\":\"EditModel_AddEditModel__4jQq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddModal\":\"AddModal_AddModal__2I3Jh\"};","\r\n/*\r\n * action types\r\n */\r\n\r\nexport const ADD_MOVIE = 'ADD_MOVIE'\r\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\r\nexport const DELETE_MOVIE = 'DELETE_MOVIE'\r\nexport const INIT_MOVIES = 'SET_MOVIES'\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function addMovie(payload) {\r\n    return { type: ADD_MOVIE, payload }\r\n};\r\n\r\nexport function updateMovie(payload) {\r\n    return { type: UPDATE_MOVIE, payload }\r\n};\r\n\r\nexport function deleteMovie(payload) {\r\n    return { type: DELETE_MOVIE, payload }\r\n};\r\n\r\nexport function initMovies() {\r\n    return dispatch => {\r\n        fetchMovies(dispatch)\r\n    }\r\n};\r\n\r\nconst fetchMovies = (dispatch) => {\r\n    let key = '887c425e';\r\n    let search = 'war';\r\n    let page = 1;\r\n\r\n    fetch(`https://www.omdbapi.com/?apikey=${key}&s=${search}&page=${page}`)\r\n        .then(res => res.json())\r\n        .then(\r\n            (results) => {\r\n                let promises = [];\r\n\r\n                //Unfortunatly I could not find any API that could fetch all requested data in one API call.\r\n                //So my solution was to run a API call for every movie the fetch got me and get all data for every movie in the list.\r\n                results.Search.map((result) => {\r\n                    promises.push(fetch(`https://www.omdbapi.com/?i=${result.imdbID}&apikey=${key}`));\r\n                });\r\n\r\n                Promise.all(promises).then((values) => {\r\n                    let movies = [];\r\n\r\n                    // Retrieve its body as ReadableStream\r\n                    console.log(\"values\");\r\n                    let readerPromises = [];\r\n\r\n                    // for every value in values we have to read the stream of it.\r\n                    values.map((value) => {\r\n                        const reader = value.body.getReader();\r\n\r\n                        // Read every stream and update the final\r\n                        readerPromises.push(reader.read().then(function processText({ done, value }) {\r\n\r\n                            // if done end the read \r\n                            if (done) {\r\n                                console.log(\"Stream complete\");\r\n                                return;\r\n                            }\r\n\r\n                            var stringValue = new TextDecoder(\"utf-8\").decode(value);\r\n                            let parsedText = JSON.parse(stringValue);\r\n                            movies.push(parsedText);\r\n\r\n                            //read next block in the stram.\r\n                            return reader.read().then(processText);\r\n                        }))\r\n                    })\r\n\r\n                    // this waits for all stream reads to finish before updating items in state. \r\n                    Promise.all(readerPromises).then(() => {\r\n                        dispatch({\r\n                            type: INIT_MOVIES,\r\n                            payload: movies\r\n                        });\r\n                    });\r\n                });\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n                alert(error);\r\n            }\r\n        )\r\n};","\r\nimport {\r\n    ADD_MOVIE,\r\n    UPDATE_MOVIE,\r\n    DELETE_MOVIE,\r\n    INIT_MOVIES,\r\n} from './actions'\r\n\r\nconst initialState = {\r\n    isLoaded:false,\r\n    items:[],\r\n    open:false\r\n};\r\n\r\nfunction moviesReducer(state = initialState, action) {\r\n\r\n    let index = 0;\r\n    let newitems = [];\r\n    switch (action.type) {\r\n        case ADD_MOVIE:\r\n            newitems = [...state.items];\r\n            newitems.push(action.payload);\r\n            return {...state, items : newitems};\r\n\r\n        case UPDATE_MOVIE:\r\n            newitems = [...state.items];\r\n            index = newitems.map(item => item.imdbID).indexOf(action.payload.imdbID);\r\n            newitems[index] = action.payload;\r\n            return {...state, items : newitems};\r\n\r\n        case DELETE_MOVIE:\r\n            newitems = [...state.items];\r\n            index = newitems.map(item => item.imdbID).indexOf(action.payload);\r\n            newitems.splice(index, 1);\r\n            return {...state, items : newitems};\r\n\r\n        case INIT_MOVIES:\r\n            return {...state, items : action.payload};\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// function modalReducer(state = true, action) {\r\n\r\n//     switch (action.type) {\r\n        \r\n//         case OPEN_MODAL:\r\n//             return Object.assign({},state,{open : true});\r\n//         case CLOSE_MODAL:\r\n//             return Object.assign({},state,{open : false});\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n\r\nexport default moviesReducer","import { createStore , combineReducers , applyMiddleware } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nimport moviesReducer from './reducers'\r\nimport reduxPromise from 'redux-promise-middleware'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\n\r\nexport default createStore(\r\n    combineReducers({\r\n        form: formReducer,\r\n        moviesReducer\r\n    }),\r\n    {},\r\n    applyMiddleware( logger,reduxPromise,thunk )\r\n)","import React from 'react'\r\nimport style from './TableHeader.module.css'\r\n\r\nconst TableHeader = (props) => {\r\n    return (\r\n        <div className={ style.TableHeader }>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableHeader\r\n","import React from 'react'\r\nimport style from './DeleteModel.module.css'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nconst DeleteModel = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <DialogTitle id=\"form-dialog-title\">Delete {props.movie.Title}?</DialogTitle>\r\n            \r\n            <DialogActions>\r\n                <Button onClick={() => {props.handleClose()}} color=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={() => { props.click(props.movie.imdbID); props.handleClose(); }} color=\"primary\">\r\n                    Delete\r\n                </Button>\r\n            </DialogActions>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DeleteModel\r\n","import React from 'react'\r\nimport style from './EditModel.module.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport store from '../../../Redux/store'\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nclass EditModel extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            titles: store.getState().moviesReducer.items.map((item) => item.Title),\r\n            error: '',\r\n            imdbID: this.props.movie.imdbID,\r\n            Title: this.props.movie.Title,\r\n            Year: this.props.movie.Year,\r\n            Runtime: this.props.movie.Runtime,\r\n            Genre: this.props.movie.Genre,\r\n            Director: this.props.movie.Director\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        if(!this.state.Title ) {\r\n            this.setState({\r\n                error: \"Error : Title is not set\"\r\n            });\r\n        } else if(this.state.Year < 1900 || this.state.Year > 2019){\r\n            this.setState({\r\n                error: \"Error : Year must be between 1900 and 2019\"\r\n            });\r\n        } else if(!this.state.Runtime ) {\r\n            this.setState({\r\n                error: \"Error : Runtime is not set\"\r\n            });\r\n        } else if(!this.state.Genre ) {\r\n            this.setState({\r\n                error: \"Error : Genre is not set\"\r\n            });\r\n        } else if(!this.state.Director ) {\r\n            this.setState({\r\n                error: \"Error : Director is not set\"\r\n            });\r\n        } else if(this.state.titles.includes(this.state.Title)) {\r\n            this.setState({\r\n                error: `Error : ${this.state.Title} already exists.`\r\n            });\r\n        } else {\r\n            this.props.click(this.state);\r\n            this.props.handleClose();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <DialogTitle id=\"form-dialog-title\"> Editing {this.props.movie.Title}</DialogTitle>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <DialogContent>\r\n                        <p style={{color: 'red'}}>{this.state.error}</p>\r\n                        <TextField\r\n                            disabled\r\n                            fullWidth\r\n                            name=\"imdbID\"\r\n                            id=\"outlined-required\"\r\n                            label=\"imdbID\"\r\n                            defaultValue={this.props.movie.imdbID}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Title\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Title\"\r\n                            defaultValue={this.props.movie.Title}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"Year\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Year\"\r\n                            defaultValue={this.props.movie.Year}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Runtime\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Runtime\"\r\n                            defaultValue={this.props.movie.Runtime}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Genre\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Genre\"\r\n                            defaultValue={this.props.movie.Genre}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Director\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Director\"\r\n                            defaultValue={this.props.movie.Director}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => { this.props.handleClose() }} color=\"primary\">\r\n                            Cancel\r\n                    </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Update\r\n                    </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default EditModel\r\n","import React from 'react'\r\nimport style from './AddModal.module.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport store from '../../../Redux/store'\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nclass AddModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            titles: store.getState().moviesReducer.items.map((item) => item.Title),\r\n            error: '',\r\n            imdbID: '',\r\n            Title: '',\r\n            Year: 0,\r\n            Runtime: '',\r\n            Genre: '',\r\n            Director: '',\r\n        };\r\n\r\n        console.log(this.state.titles);\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const name = event.target.name;\r\n\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        if(!this.state.imdbID ) {\r\n            this.setState({\r\n                error: \"Error : imdbID is not set\"\r\n            });\r\n        } else if(this.state.imdbID.length != 9 ) {\r\n            this.setState({\r\n                error: \"Error : imdbID must be 9 characters long\"\r\n            });\r\n        } else if(!this.state.Title ) {\r\n            this.setState({\r\n                error: \"Error : Title is not set\"\r\n            });\r\n        } else if(this.state.Year < 1900 || this.state.Year > 2019){\r\n            this.setState({\r\n                error: \"Error : Year must be between 1900 and 2019\"\r\n            });\r\n        } else if(!this.state.Runtime ) {\r\n            this.setState({\r\n                error: \"Error : Runtime is not set\"\r\n            });\r\n        } else if(!this.state.Genre ) {\r\n            this.setState({\r\n                error: \"Error : Genre is not set\"\r\n            });\r\n        } else if(!this.state.Director ) {\r\n            this.setState({\r\n                error: \"Error : Director is not set\"\r\n            });\r\n        } else if(this.state.titles.includes(this.state.Title)) {\r\n            this.setState({\r\n                error: `Error : ${this.state.Title} already exists.`\r\n            });\r\n        } else {\r\n            this.props.click(this.state);\r\n            this.props.handleClose();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <DialogTitle id=\"form-dialog-title\"> Adding a new movie</DialogTitle>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <DialogContent>\r\n                        <p style={{color: 'red'}}>{this.state.error}</p>\r\n                        <TextField\r\n                            fullWidth\r\n                            name=\"imdbID\"\r\n                            id=\"outlined-required\"\r\n                            label=\"imdbID\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Title\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Title\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            type=\"number\"\r\n                            name=\"Year\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Year\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Runtime\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Runtime\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Genre\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Genre\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            inputProps={{\r\n                                maxLength: 50,\r\n                            }}\r\n                            fullWidth\r\n                            name=\"Director\"\r\n                            id=\"outlined-required\"\r\n                            label=\"Director\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => { this.props.handleClose() }} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                            Create\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AddModal\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport DeleteModel from './DeleteModel/DeleteModel.jsx';\r\nimport EditModel from './EditModel/EditModel.jsx';\r\nimport AddModal from './AddModal/AddModal.jsx';\r\n\r\nexport default class Modal extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.model = null;\r\n    }\r\n\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.value == \"Delete\") {\r\n            this.model = <DeleteModel\r\n                click={this.props.click}\r\n                movie={this.props.movie}\r\n                handleClose={this.handleClose}\r\n            />\r\n        } else if (this.props.value == \"Edit\") {\r\n            this.model = <EditModel\r\n                click={this.props.click}\r\n                movie={this.props.movie}\r\n                handleClose={this.handleClose}\r\n            />\r\n        } else if (this.props.value == \"Add\") {\r\n            this.model = <AddModal\r\n                click={this.props.click}\r\n                handleClose={this.handleClose}\r\n            />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    {this.props.value}\r\n                </Button>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    {this.model}\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport style from './Item.module.css'\r\nimport Button from '../../../Button/Button.jsx'\r\nimport Modal from '../../../Modal/Modal.jsx'\r\n\r\nconst Item = (props) => {\r\n\r\n    let modals = null;\r\n    if (!props.header) {\r\n        modals = <React.Fragment>\r\n            <Modal movie={props.movie} click={props.updateMovie} value='Edit'></Modal>\r\n            <Modal movie={props.movie} click={props.deleteMovie} value='Delete'></Modal>\r\n        </React.Fragment>\r\n    }\r\n\r\n    return (\r\n        <div className={style.Item}>\r\n            <p>{props.movie.imdbID}</p>\r\n            <p>{(props.movie.Title).toLowerCase().match(/([a-z\\s])+/g).join('')}</p>\r\n            <p>{props.movie.Year}</p>\r\n            <p>{props.movie.Runtime}</p>\r\n            <p>{props.movie.Genre}</p>\r\n            <p>{props.movie.Director}</p>\r\n\r\n            {modals}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React, { Component } from 'react';\r\nimport style from './Table.module.css'\r\nimport TableHeader from './TableHeader/TableHeader.jsx'\r\nimport Item from './Item/Item.jsx'\r\nimport Modal from '../../Modal/Modal.jsx'\r\n\r\nclass Table extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initMovies();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            < div className={style.Table} >\r\n                <TableHeader></TableHeader>\r\n                <Item \r\n                    movie={{\r\n                        imdbID: \"imdbID\",\r\n                        Title : \"Title\",\r\n                        Year : \"Year\", \r\n                        Runtime : \"Runtime\", \r\n                        Genre : \"Genre\", \r\n                        Director : \"Director\"\r\n                    }}\r\n                    header= {true}></Item>\r\n                {\r\n                    (this.props.movies || []).map(\r\n                        (movie) => {\r\n                            return <Item\r\n                                movie={movie}\r\n                                updateMovie= {this.props.updateMovie}\r\n                                deleteMovie= {this.props.deleteMovie}>\r\n                            </Item>\r\n                        }\r\n                    )\r\n                }\r\n                <Modal click={this.props.addMovie} value='Add'></Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Table\r\n","import { connect } from 'react-redux'\r\nimport { addMovie, updateMovie, deleteMovie, initMovies } from '../Redux/actions'\r\nimport Table from '../Components/Container/Table/Table.jsx'\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.moviesReducer.items\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMovie: (payload) => dispatch(addMovie(payload)),\r\n    updateMovie: (payload) => dispatch(updateMovie(payload)),\r\n    deleteMovie: (payload) => dispatch(deleteMovie(payload)),\r\n    initMovies: () => dispatch(initMovies())\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Table);","import React from 'react'\r\nimport style from './Container.module.css'\r\nimport TableMovies from '../../Containers/TableMovies'\r\nimport Modal from '../Modal/Modal.jsx'\r\n\r\nconst Container = (props) => {\r\n\r\n    const title = \"Movies\";\r\n\r\n    \r\n\r\n    return (\r\n        <div className={style.Container}>\r\n            <h1>★ ★ ★ {title} ★ ★ ★</h1>\r\n            <br />\r\n            <TableMovies />\r\n            <br />\r\n            Application made by Ivan Solobear | Photo by Tyler Callahan on Unsplash\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React, { Component } from 'react';\n// import logo from '../Images/logo.svg';\nimport style from './App.module.css';\nimport Container from '../Container/Container.jsx';\n// import TableMovies from '../../Containers/TableMovies.jsx'\n// import VisibleTodoList from '../../Containers/VisibleTodoList/VisibleTodoList.jsx'\n\n// import { SET_MOVIES } from '../../Redux/actions'\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className={style.App}>\n        <Container />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport rootReducer from './Redux/reducers'\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux'\nimport ReduxStore from './Redux/store'\nimport './index.css';\nimport App from './Components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider,createMuiTheme } from '@material-ui/core/styles';\n\n\n// const store = createStore(rootReducer);\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: '#613C24',\n      },\n  },\n});\n\nrender(\n  <Provider store={ReduxStore}>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n//FIXME: if something breaks comment this back in\nserviceWorker.unregister();\n"],"sourceRoot":""}